/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-histogram/style.less":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-histogram/style.less ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"multi-well-histogram {\\n  /* change style special of wi-base-treeview for basemap */\\n}\\nmulti-well-histogram input,\\nmulti-well-histogram select {\\n  box-shadow: none;\\n}\\nmulti-well-histogram .red-color {\\n  color: #cc6d6d;\\n}\\nmulti-well-histogram .blue-color {\\n  color: #0077be;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-well-histogram wi-tree-view div input {\\n  width: 100%;\\n  line-height: 1.4;\\n  padding: 10px 10px 10px 14px;\\n  border: none;\\n  border-bottom: 1px solid #f0f0f0;\\n  outline: none;\\n  box-sizing: border-box;\\n}\\nmulti-well-histogram wi-tree-view div input::placeholder {\\n  color: #cecece;\\n}\\nmulti-well-histogram wi-table-view div.cell {\\n  display: table-cell;\\n  padding: 7px 10px;\\n  border-right: 1px solid #d4d4d4;\\n  border-bottom: 1px solid #d4d4d4;\\n  cursor: default;\\n  position: relative;\\n  border-top: none;\\n  border-left: none;\\n}\\nmulti-well-histogram wi-table-view div.table {\\n  margin-top: 0;\\n}\\nmulti-well-histogram wi-dropdown-list:focus {\\n  outline: none !important;\\n}\\nmulti-well-histogram wi-dropdown-list .ui-select-bootstrap > .ui-select-match > .btn {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  font-size: 12px;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default:active:focus {\\n  background-color: #fff;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default.active,\\nmulti-well-histogram wi-dropdown-list .btn-default:active,\\nmulti-well-histogram wi-dropdown-list .open > .dropdown-toggle.btn-default {\\n  color: #333;\\n  background-color: #fff;\\n  background-image: none;\\n  border-color: #adadad;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default.focus,\\nmulti-well-histogram wi-dropdown-list .btn-default:focus {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-histogram wi-dropdown-list .form-control {\\n  border: none;\\n}\\nmulti-well-histogram wi-dropdown-list :focus {\\n  outline: none;\\n}\\nmulti-well-histogram wi-dropdown-list .form-control:focus {\\n  border: none;\\n  box-shadow: none;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default:hover {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-histogram side-bar > div div.content {\\n  overflow-x: hidden;\\n  height: 100%;\\n  display: flex;\\n  overflow-y: auto;\\n  /* padding-left: 15px; */\\n  flex-direction: column;\\n}\\nmulti-well-histogram wi-droppable {\\n  height: 100%;\\n}\\nmulti-well-histogram wi-tree-node .node-caret,\\nmulti-well-histogram wi-tree-node .node-label,\\nmulti-well-histogram wi-tree-node .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 12px;\\n}\\nmulti-well-histogram wi-tree-node .node-caret {\\n  color: #cccbcb;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 16px;\\n}\\nmulti-well-histogram wi-tree-node .node-content.search-mode > div {\\n  opacity: 1;\\n}\\nmulti-well-histogram wi-tree-node .node-content,\\nmulti-well-histogram wi-tree-node .node-content::after {\\n  line-height: 3em;\\n}\\nmulti-well-histogram .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-well-histogram button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-well-histogram .main {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .main-toolbar {\\n  flex-basis: 44px;\\n  background: #0074c5;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item {\\n  margin: 0 15px;\\n  color: #fff;\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item .select-proj4 {\\n  box-shadow: none;\\n  border: none;\\n  border-radius: 0;\\n  font-size: 12px;\\n  color: #fff;\\n  background: none;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item .select-proj4:focus {\\n  border-color: none;\\n  outline: none;\\n  -webkit-box-shadow: none;\\n  box-shadow: none;\\n}\\nmulti-well-histogram .main .statistic-table {\\n  margin: 15px 15px;\\n  position: relative;\\n  height: 20%;\\n  max-height: 64%;\\n}\\nmulti-well-histogram .main .main-body {\\n  flex: 1;\\n  display: flex;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .main-body .border-style {\\n  border: 1px solid #eee;\\n  border-top-right-radius: 3px;\\n  border-top-left-radius: 3px;\\n}\\nmulti-well-histogram .main .main-body .main-body-left {\\n  display: flex;\\n  z-index: 1;\\n  height: calc(100%);\\n}\\nmulti-well-histogram .main .main-body .main-body-left .input-search-list-view {\\n  background: #fff;\\n  width: 100%;\\n  height: 44px;\\n  border: 1px solid #ffffff4a;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 10px 20px 10px 15px;\\n  font-weight: bold;\\n}\\nmulti-well-histogram .main .main-body .main-body-left ::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-histogram .main .main-body .main-body-left :focus::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-histogram .main .main-body .main-body-left .input-search-list-view:focus {\\n  outline: none;\\n}\\nmulti-well-histogram .main .main-body .main-body-center {\\n  flex: 1;\\n  display: flex;\\n  height: 100%;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .button-update {\\n  background: #0077be;\\n  color: #fff;\\n  font-weight: bold;\\n  flex: 1;\\n  padding: 10px;\\n  text-align: center;\\n  margin: 9px 15px 15px 15px;\\n  border-radius: 2px;\\n  cursor: pointer;\\n}\\nmulti-well-histogram .main .button-update:hover {\\n  background: #1ba0ec;\\n  transition: all 0.5s;\\n}\\nmulti-well-histogram .main .label-list-view {\\n  padding: 16px 15px;\\n  font-weight: bold;\\n  background: #f4f4f4;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  font-weight: 400;\\n}\\nmulti-well-histogram .main .label-info-image {\\n  background: #fff;\\n  min-width: 99px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 3px;\\n  padding: 5px 10px;\\n  margin-right: 15px;\\n  justify-content: space-between;\\n}\\nmulti-well-histogram .main .button-td {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  padding: 3px 10px;\\n  border-radius: 2px;\\n  border: 1px solid #e8e8e8;\\n}\\nmulti-well-histogram .main .button-td:hover {\\n  background: #87c1ff;\\n  color: #fff;\\n}\\nmulti-well-histogram .main .header-icon {\\n  margin-right: 10px;\\n  cursor: pointer;\\n  width: 10px;\\n}\\nmulti-well-histogram .main .label-button {\\n  float: right;\\n  font-size: 115%;\\n  color: #bbbbbb;\\n  margin: 2px 5px 0 15px;\\n  pointer-events: none;\\n}\\nmulti-well-histogram .main .button-with-label-layer {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 7px;\\n  margin-left: 5px;\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  flex: 1;\\n  text-align: center;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label-layer:hover {\\n  background: #fff;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 10px;\\n  border: 1px solid #f4f4f4;\\n  border-radius: 20px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label.active {\\n  background: #f4f4f4;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .tab-with-label {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 12px;\\n  padding: 12px 10px 8px 10px;\\n  border-bottom: 2px solid #f4f4f4;\\n  transition: all 0.2s ease-in;\\n  flex: 1;\\n  font-weight: bold;\\n  text-align: center;\\n}\\nmulti-well-histogram .main .tab-with-label.active {\\n  color: #0077be;\\n  border-bottom: 2px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .select-table-header {\\n  border: 1px solid #eee;\\n  background: #f4f4f4;\\n  padding: 5px 16px;\\n  margin: 0 15px 15px 0;\\n  cursor: pointer;\\n  border-radius: 2px;\\n}\\nmulti-well-histogram .main .select-table-header.active {\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .label-option-sidebar {\\n  font-weight: bold;\\n  font-size: 12px;\\n  color: #646464;\\n  background: #fff;\\n  padding: 11px 16px;\\n}\\nmulti-well-histogram .main .selection-sidebar {\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  padding: 1px 10px;\\n  align-items: center;\\n  display: flex;\\n}\\nmulti-well-histogram .main .selection-sidebar > input:focus {\\n  outline: none;\\n}\\nmulti-well-histogram .main .input-suggestions {\\n  margin-left: 10px;\\n  border: none;\\n  flex: 1;\\n  color: #0077be;\\n  text-align: right;\\n}\\nmulti-well-histogram ::-webkit-scrollbar {\\n  background: #f4f4f4;\\n  width: 5px;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc;\\n}\\nmulti-well-histogram .fix-header-table {\\n  overflow-y: auto;\\n  display: flex;\\n  flex: 1;\\n}\\nmulti-well-histogram .fix-header-table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-histogram .rectangle {\\n  border: 0.5px solid #a7a7a7;\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 11px;\\n  background: #0077be;\\n}\\nmulti-well-histogram table {\\n  border-collapse: collapse;\\n  table-layout: fixed;\\n  width: 100%;\\n  user-select: none;\\n}\\nmulti-well-histogram table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-histogram thead {\\n  border-bottom: 1px solid #ccc;\\n}\\nmulti-well-histogram td,\\nmulti-well-histogram th {\\n  border-bottom: 1px solid #f0f0f0;\\n  border-right: 1px solid #f0f0f0;\\n  padding-top: 10px;\\n  padding-bottom: 9px;\\n  padding-left: 14px;\\n  overflow: hidden;\\n}\\nmulti-well-histogram tr {\\n  border-right: 4px solid #fff;\\n}\\nmulti-well-histogram tr.updated {\\n  background-color: #c2eaff70;\\n}\\nmulti-well-histogram tr.created {\\n  background-color: #abeaab29;\\n}\\nmulti-well-histogram tr.deleted {\\n  background-color: #f4f4f4;\\n  pointer-events: none;\\n  color: #d8d3d3;\\n}\\nmulti-well-histogram tr:hover {\\n  border-right: 4px solid #0077be;\\n  background: #f9f9f9;\\n}\\nmulti-well-histogram th {\\n  padding-top: 9px;\\n  padding-bottom: 10px;\\n  text-align: left;\\n  background-color: #ffffff;\\n  color: #0077be;\\n}\\nmulti-well-histogram ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #9e9e9e;\\n  opacity: 1;\\n  /* Firefox */\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./multi-well-histogram/style.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/addStyles.js":
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/urls.js":
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\r\n    multiWellHistogram: __webpack_require__(/*! ./multi-well-histogram */ \"./multi-well-histogram/index.js\")\r\n}\r\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./multi-well-histogram/index.js":
/*!***************************************!*\
  !*** ./multi-well-histogram/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var componentName = 'multiWellHistogram';\r\nmodule.exports.name = componentName;\r\n__webpack_require__(/*! ./style.less */ \"./multi-well-histogram/style.less\");\r\n\r\nconst _DECIMAL_LEN = 4;\r\n\r\nvar app = angular.module(componentName, [\r\n    'sideBar', 'wiTreeView', 'wiTableView',\r\n    'wiApi', 'editable', 'wiDialog',\r\n    'wiDroppable', 'wiDropdownList','plot-toolkit','wiLoading','angularResizable','wiDiscriminator'\r\n]);\r\napp.component(componentName, {\r\n    template: __webpack_require__(/*! ./template.html */ \"./multi-well-histogram/template.html\"),\r\n    controller: multiWellHistogramController,\r\n    controllerAs: 'self',\r\n    bindings: {\r\n        token: \"<\",\r\n        idProject: \"<\",\r\n        wellSpec: \"<\",\r\n        zonesetName: \"<\",\r\n        selectionType: \"<\",\r\n        selectionValue: \"<\",\r\n\t\tidHistogram: \"<\",\r\n\t\tconfig: '<',\r\n        onSave: '<'\r\n    },\r\n    transclude: true\r\n});\r\n\r\nfunction multiWellHistogramController($scope, $timeout, $element, ModalService, wiToken, wiApi, wiDialog, wiLoading) {\r\n    let self = this;\r\n    self.treeConfig = [];\r\n    self.selectedNode = null;\r\n    self.datasets = {};\r\n    self.statisticHeaders = ['top','bottom','#pts','avg','min', 'max', 'avgdev', 'stddev', 'var', 'skew', 'kurtosis', 'median', 'p10', 'p50', 'p90'];\r\n    self.statisticHeaderMasks = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];\r\n    //--------------\r\n    $scope.tab = 1;\r\n    self.selectionTab = self.selectionTab || 'Wells';\r\n\r\n    $scope.setTab = function(newTab){\r\n      $scope.tab = newTab;\r\n    };\r\n\r\n    $scope.isSet = function(tabNum){\r\n      return $scope.tab === tabNum;\r\n    };\r\n    this.discriminator = function () {\r\n        console.log(\"Các cháu ơi\");\r\n        wiDialog.discriminator(function() {});\r\n    }\r\n    //--------------\r\n    this.getDataset = function(well) {\r\n        wiApi.getCachedWellPromise(well.idWell).then((well) => {\r\n            self.datasets[well] = well.datasets;\r\n        }).catch(e => console.error(e));\r\n    }\r\n    \r\n    function getCurvesInWell(well) {\r\n        let curves = [];\r\n        well.datasets.forEach(dataset => {\r\n            curves.push(...dataset.curves);\r\n        });\r\n        return curves;\r\n    }\r\n\r\n    function getFamilyInWell(well) {\r\n        let curves = getCurvesInWell(well);\r\n        let familyList = curves.map(c => wiApi.getFamily(c.idFamily));\r\n        return familyList;\r\n    }\r\n    this.$onInit = function () {\r\n        if (self.token)\r\n            wiToken.setToken(self.token);\r\n        $timeout(() => {\r\n            $scope.$watch(() => (self.wellSpec.map(wsp => wsp.idWell)), () => {\r\n                getTree();\r\n            }, true);\r\n            $scope.$watch(() => (self.selectionType), () => {\r\n                getSelectionList(self.selectionType, self.treeConfig);\r\n                updateDefaultConfig();\r\n            });\r\n            $scope.$watch(() => (self.selectionValue), () => {\r\n                updateDefaultConfig();\r\n            });\r\n            $scope.$watch(() => (self.treeConfig.map(w => w.idWell)), () => {\r\n                getSelectionList(self.selectionType, self.treeConfig);\r\n                getZonesetsFromWells(self.treeConfig);\r\n                updateDefaultConfig();\r\n            }, true);\r\n            // $scope.$watch(() => (\r\n            //     `${self.getLeft()}-${self.getRight()}-${self.getLoga()}-${self.getDivisions()}-${self.selectionValue}`\r\n            // ), () => {\r\n            //     _histogramGen = null;\r\n            // });\r\n        }, 500);\r\n\r\n        self.defaultConfig = self.defaultConfig || {};\r\n        self.wellSpec = self.wellSpec || [];\r\n        self.selectionType = self.selectionType || 'family-group';\r\n        self.zoneTree = [];\r\n        self.zonesetName = self.zonesetName || \"ZonationAll\";\r\n        self.config = self.config || {grid:true, displayMode: 'bar', colorMode: 'zone', stackMode: 'well', binGap: 5};\r\n    }\r\n\r\n    this.onInputSelectionChanged = function(selectedItemProps) {\r\n        self.selectionValue = (selectedItemProps || {}).name;\r\n    }\r\n\r\n    function getSelectionList(selectionType, wellArray) {\r\n        let selectionHash = {};\r\n        let allCurves = [];\r\n        wellArray.forEach(well => {\r\n            let curvesInWell = getCurvesInWell(well);\r\n            allCurves.push(...curvesInWell);\r\n        });\r\n        switch(selectionType) {\r\n            case 'curve':\r\n                allCurves.forEach(curve => {\r\n                    selectionHash[curve.name] = 1;\r\n                })\r\n                break;\r\n            case 'family': \r\n                allCurves.forEach(curve => {\r\n                    let family = wiApi.getFamily(curve.idFamily);\r\n                    if(family)\r\n                        selectionHash[family.name] = 1;\r\n                })\r\n                break;\r\n            case 'family-group':\r\n                allCurves.forEach(curve => {\r\n                    let family = wiApi.getFamily(curve.idFamily);\r\n                    if(family)\r\n                        selectionHash[family.familyGroup] = 1;\r\n                })\r\n                break;\r\n        }\r\n        self.selectionList = Object.keys(selectionHash).map(item => ({ \r\n            data:{label:item}, \r\n            properties:{name:item} \r\n        }));\r\n    }\r\n    \r\n    this.runMatch = function (node, criteria) {\r\n        let family;\r\n        if (!criteria) return true;\r\n        switch(self.selectionType) {\r\n            case 'family-group': \r\n                family = wiApi.getFamily(node.idFamily);\r\n                if (!family) return null;\r\n                return family.familyGroup.trim().toLowerCase() === criteria.trim().toLowerCase();\r\n            \r\n            case 'family': \r\n                family = wiApi.getFamily(node.idFamily);\r\n                if (!family) return null;\r\n                return family.name.trim().toLowerCase() === criteria.trim().toLowerCase();\r\n            \r\n            case 'curve':\r\n                return node.name.trim().toLowerCase() === criteria.trim().toLowerCase();\r\n        }\r\n    }\r\n    this.getLabel = function (node) {\r\n        return node.name;\r\n    }\r\n    this.getIcon = function (node) {\r\n        if (node.idCurve) return 'curve-16x16';\r\n        if (node.idDataset) return 'curve-data-16x16';\r\n        if (node.idWell) return 'well-16x16';\r\n    }\r\n    this.getChildren = function (node) {\r\n        if (node.idDataset) {\r\n            return node.curves;\r\n        }\r\n        if (node.idWell) {\r\n            return node.datasets;\r\n        }\r\n        return [];\r\n    }\r\n    this.clickFunction = clickFunction;\r\n    function clickFunction($event, node, selectedObjs, treeRoot) {\r\n        let wellSpec = self.wellSpec.find(wsp => wsp.idWell === treeRoot.idWell);\r\n        wellSpec.idCurve = node.idCurve;\r\n        wellSpec.idDataset = node.idDataset;\r\n        wellSpec.curveName = node.Name;\r\n    }\r\n    this.refresh = function(){\r\n        self.histogramList.length = 0;\r\n        self.treeConfig.length = 0;\r\n        getTree();\r\n    };\r\n    async function getTree(callback) {\r\n        wiLoading.show($element.find('.main')[0]);\r\n        self.treeConfig = [];\r\n        let promises = [];\r\n\t\tfor (let w of self.wellSpec) {\r\n\t\t\ttry {\r\n\t\t\t\tlet well = await wiApi.getCachedWellPromise(w.idWell || w);\r\n\t\t\t\t$timeout(() => self.treeConfig.push(well));\r\n\t\t\t}\r\n\t\t\tcatch(e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcallback && callback();\r\n\t\twiLoading.hide();\r\n        // for (let w of self.wellSpec) {\r\n        //     promises.push(\r\n        //         wiApi.getWellPromise(w.idWell || w)\r\n        //             .then(well => ($timeout(() => self.treeConfig.push(well))))\r\n        //     );\r\n        // }\r\n        /*Promise.all(promises)\r\n            .then(() => callback && callback())\r\n            .catch(e => console.error(e))\r\n            .finally(() => wiLoading.hide());\r\n\t\t*/\r\n    }\r\n    function getZonesetsFromWells(wells) {\r\n        let zsList;\r\n        for (let well of wells) {\r\n            let zonesets = well.zone_sets;\r\n            if (!zsList) {\r\n                zsList = angular.copy(zonesets);\r\n            }\r\n            else if (zsList.length) {\r\n                zsList = intersectAndMerge(zsList, zonesets);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        self.zonesetList = (zsList || []).map( zs => ({\r\n            data: {\r\n                label: zs.name\r\n            },\r\n            properties: zs\r\n        }));\r\n        self.zonesetList.splice(0, 0, {data: {label: 'ZonationAll'}, properties: genZonationAllZS(0, 1)});\r\n    }\r\n    function intersectAndMerge(dstZoneList, srcZoneList) {\r\n        return dstZoneList.filter(zs => {\r\n            let zoneset = srcZoneList.find(zs1 => zs.name === zs1.name);\r\n            if (!zoneset) return false;\r\n            for (let z of zoneset.zones) {\r\n                let zone = zs.zones.find(zo => zo.zone_template.name == z.zone_template.name);\r\n                if (!zone) {\r\n                    zs.zones.push(angular.copy(z));\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    this.getWellSpec = getWellSpec;\r\n    function getWellSpec(well) {\r\n        if (!well) return {};\r\n        return self.wellSpec.find(wsp => wsp.idWell === well.idWell);\r\n    }\r\n    this.getCurve = getCurve;\r\n    function getCurve(well) {\r\n        let wellSpec = getWellSpec(well);\r\n        if (!Object.keys(wellSpec).length) return {};\r\n        let curves = getCurvesInWell(well).filter(c => self.runMatch(c, self.selectionValue));\r\n        let curve = wellSpec.idCurve ? curves.find(c => c.idCurve === wellSpec.idCurve) : curves[0];\r\n        if (!curve) {\r\n            delete wellSpec.curveName;\r\n            delete wellSpec.idCurve;\r\n            delete wellSpec.idDataset;\r\n            delete wellSpec.datasetName;\r\n            delete wellSpec.datasetTop;\r\n            delete wellSpec.datasetBottom;\r\n            delete wellSpec.datasetStep;\r\n            return;\r\n        }\r\n        wellSpec.curveName = curve.name;\r\n        wellSpec.idCurve = curve.idCurve;\r\n        wellSpec.idDataset = curve.idDataset;\r\n\r\n        let datasets = self.getChildren(well);\r\n        let dataset = wellSpec.idDataset ? datasets.find(ds => ds.idDataset === wellSpec.idDataset):datasets[0];\r\n        wellSpec.datasetName = dataset.name;\r\n        wellSpec.datasetTop = parseFloat(dataset.top);\r\n        wellSpec.datasetBottom = parseFloat(dataset.bottom);\r\n        wellSpec.datasetStep = parseFloat(dataset.step);\r\n        return curve;\r\n    }\r\n    function getZoneset(well, zonesetName = \"\") {\r\n        let zonesets = well.zone_sets;\r\n        if (zonesetName === \"\" || zonesetName === \"ZonationAll\") \r\n            return null;\r\n        return zonesets.find(zs => zs.name === zonesetName);\r\n    }\r\n    this.onZonesetSelectionChanged = function(selectedItemProps) {\r\n        self.zoneTree = (selectedItemProps || {}).zones;\r\n        self.zonesetName = (selectedItemProps || {}).name || 'ZonationAll';\r\n    }\r\n    this.runZoneMatch = function (node, criteria) {\r\n        let keySearch = criteria.toLowerCase();\r\n        let searchArray = node.zone_template.name.toLowerCase();\r\n        return searchArray.includes(keySearch);\r\n    }\r\n    this.getZoneLabel = function (node) {\r\n        if(!node || !node.zone_template){\r\n            return 'aaa';\r\n        }\r\n        return node.zone_template.name;\r\n    }\r\n   \r\n    this.getZoneIcon = (node) => ( (node && !node._notUsed) ? 'zone-16x16': 'fa fa-eye-slash' )\r\n    const EMPTY_ARRAY = []\r\n    this.noChildren = function (node) {\r\n        return EMPTY_ARRAY;\r\n    }\r\n    this.click2ToggleZone = function ($event, node, selectedObjs) {\r\n        node._notUsed = !node._notUsed;\r\n        self.selectedZones = Object.values(selectedObjs).map(o => o.data);\r\n    }\r\n    this.click2ToggleLayer = function ($event, node, selectedObjs) {\r\n        node._notUsed = !node._notUsed;\r\n        self.selectedLayers = Object.values(selectedObjs).map(o => o.data);\r\n    }\r\n    \r\n    this.runLayerMatch = function (node, criteria) {\r\n        let keySearch = criteria.toLowerCase();\r\n        let searchArray = node.name.toLowerCase();\r\n        return searchArray.includes(keySearch);\r\n    }\r\n    let _layerTree = [];\r\n    this.getLayerTree = function() {\r\n        if(self.getStackMode() === 'all') {\r\n            _layerTree[0] = self.histogramList;\r\n            return _layerTree;\r\n        }\r\n        return self.histogramList;\r\n    }\r\n    this.getLayerLabel = (node) => node.name\r\n    this.getLayerIcon = (node) => ( (node && !node._notUsed) ? 'layer-16x16': 'fa fa-eye-slash' )\r\n    this.getLayerIcons = (node) => ( [\"rectangle\"] )\r\n    this.getLayerIconStyle = (node) => ( {\r\n        'background-color': node.color\r\n    } )\r\n    this.getConfigLeft = function() {\r\n        self.config = self.config || {};\r\n        return isNaN(self.config.left) ? \"[empty]\": wiApi.bestNumberFormat(self.config.left, 3);\r\n    }\r\n    this.getConfigLimitTop = function () {\r\n        self.config = self.config || {};\r\n        return isNaN(self.config.limitTop) ? \"[empty]\": wiApi.bestNumberFormat(self.config.limitTop, 3);\r\n    }\r\n    this.getConfigLimitBottom = function () {\r\n        self.config = self.config || {};\r\n        return isNaN(self.config.limitBottom) ? \"[empty]\": wiApi.bestNumberFormat(self.config.limitBottom, 3);\r\n    }\r\n    this.setConfigLimitTop = function (notUse, newValue) {\r\n        self.config.limitTop = parseFloat(newValue)\r\n    }\r\n    this.setConfigLimitBottom = function (notUse, newValue) {\r\n        self.config.limitBottom = parseFloat(newValue)\r\n    }\r\n    this.setConfigLeft = function(notUse, newValue) {\r\n        self.config.left = parseFloat(newValue);\r\n    }\r\n    this.getConfigRight = function() {\r\n        self.config = self.config || {};\r\n        return isNaN(self.config.right) ? \"[empty]\": wiApi.bestNumberFormat(self.config.right, 3);\r\n    }\r\n    this.setConfigRight = function(notUse, newValue) {\r\n        self.config.right = parseFloat(newValue);\r\n    }\r\n    this.getConfigDivisions = function() {\r\n        self.config = self.config || {};\r\n        return isNaN(self.config.divisions) ? \"[empty]\": self.config.divisions;\r\n    }\r\n    this.setConfigDivisions = function(notUse, newValue) {\r\n        self.config.divisions = parseInt(newValue);\r\n    }\r\n    this.getConfigTitle = function() {\r\n        self.config = self.config || {};\r\n        return (self.config.title || \"\").length ? self.config.title : \"New Histogram\";\r\n    }\r\n    this.setConfigTitle = function(notUse, newValue) {\r\n        self.config.title = newValue;\r\n    }\r\n    this.getConfigXLabel = function() {\r\n        self.config = self.config || {};\r\n        return (self.config.xLabel || \"\").length ? self.config.xLabel : self.selectionValue;\r\n    }\r\n    this.setConfigXLabel = function(notUse, newValue) {\r\n        self.config.xLabel = newValue;\r\n    }\r\n    function clearDefaultConfig() {\r\n        self.defaultConfig = {};\r\n    }\r\n    function updateDefaultConfig() {\r\n        clearDefaultConfig();\r\n        let curve = getCurve(self.treeConfig[0], self.wellSpec[0]);\r\n        if (!curve) return;\r\n        let family = wiApi.getFamily(curve.idFamily);\r\n        if (!family) return;\r\n        self.defaultConfig.left = family.family_spec[0].minScale;\r\n        self.defaultConfig.right = family.family_spec[0].maxScale;\r\n        self.defaultConfig.loga = family.family_spec[0].displayType.toLowerCase() === 'logarithmic';\r\n    }\r\n\r\n    this.histogramList = [];\r\n\tvar flattenHistogramList = [];\r\n\tvar listWellStats = [];\r\n\tvar listAllStats = [];\r\n    this.genHistogramList = async function() {\r\n        this.histogramList.length = 0;\r\n        let allHistogramList = []\r\n\t\tlistWellStats.length = 0;\r\n\t\tlistAllStats.length = 0;\r\n        _histogramGen = null;\r\n        wiLoading.show($element.find('.main')[0]);\r\n\r\n\t\tlet allZones = [];\r\n\t\tlet allDataArray = [];\r\n        try {\r\n            \r\n            for (let i = 0; i < self.treeConfig.length; i++) {\r\n                let well = self.treeConfig[i];\r\n                if (well._notUsed) {\r\n                    continue;\r\n                }\r\n                let curve = getCurve(well, self.wellSpec[i]);\r\n                if (!curve) {\r\n                    continue;\r\n                }\r\n                let datasetTop = self.wellSpec[i].datasetTop;\r\n                let datasetBottom = self.wellSpec[i].datasetBottom;\r\n                let datasetStep = self.wellSpec[i].datasetStep;\r\n\r\n                let zoneset = getZoneset(well, self.zonesetName);\r\n                zoneset = zoneset || genZonationAllZS(datasetTop, datasetBottom, well.color);\r\n\r\n                let curveData = await wiApi.getCachedCurveDataPromise(curve.idCurve);\r\n                curveData = curveData.filter(d => _.isFinite(d.x))\r\n                    .map(d => ({\r\n                        ...d, \r\n                        depth: datasetStep>0?(datasetTop + d.y * datasetStep):d.y\r\n                    }));\r\n                let zones = zoneset.zones.filter(zone => {\r\n                    let z = self.zoneTree.find(z1 => {\r\n                        return z1.zone_template.name === zone.zone_template.name\r\n                    });\r\n                    return !z._notUsed;\r\n                });\r\n\t\t\t\tif (self.getStackMode() === 'all') {\r\n\t\t\t\t\tallZones = [...allZones, ...zones];\r\n\t\t\t\t}\r\n                let wellHistogramList = [];\r\n\t\t\t\tlet wellDataArray = [];\r\n                for (let j = 0; j < zones.length; j++) {\r\n                    let zone = zones[j];\r\n                    let dataArray = filterData(curveData, zone);\r\n\t\t\t\t\tdataArray.top = zone.startDepth;\r\n\t\t\t\t\tdataArray.bottom = zone.endDepth;\r\n\t\t\t\t\tif (self.getStackMode() === 'well') {\r\n\t\t\t\t\t\twellDataArray = [...wellDataArray, ...dataArray];\r\n\t\t\t\t\t} else if (self.getStackMode() === 'all') {\r\n\t\t\t\t\t\tallDataArray = [...allDataArray, ...dataArray];\r\n\t\t\t\t\t}\r\n                    let bins = genBins(dataArray);\r\n                    bins.color = self.getColor(zone, well);\r\n                    bins.name = `${well.name}.${zone.zone_template.name}`;\r\n\r\n\t\t\t\t\tbins.stats = {};\r\n\t\t\t\t\tbins.stats.top = zone.startDepth;\r\n\t\t\t\t\tbins.stats.bottom = zone.endDepth;\r\n\t\t\t\t\tlet stats = setStats(dataArray.map(d => d.x));\r\n\t\t\t\t\tbins.stats = Object.assign(bins.stats, stats);\r\n\t\t\t\t\twellHistogramList.push(bins);\r\n                    // try {\r\n                    //     bins.avg = d3.mean(dataArray, d => d.x);\r\n                    //     bins.min = d3.min(dataArray, d => d.x);\r\n                    //     bins.max = d3.max(dataArray, d => d.x);\r\n                    //     bins.stddev = d3.deviation(dataArray, d => d.x);\r\n                    //     bins.avgdev = calAverageDeviation(dataArray.map(d => d.x));\r\n                    //     bins.var = d3.variance(dataArray, d => d.x);\r\n                    //     bins.median = d3.median(dataArray, d => d.x);\r\n                    //     bins.skew = dataArray.length >= 3 ? ss.sampleSkewness(dataArray.map(d => d.x)) : undefined;\r\n                    //     bins.kurtosis = dataArray.length >= 4 ? ss.sampleKurtosis(dataArray.map(d => d.x)) : undefined;\r\n                    //     bins.p10 = calPercentile(dataArray.map(d => d.x), 0.1);\r\n                    //     bins.p50 = calPercentile(dataArray.map(d => d.x), 0.5);\r\n                    //     bins.p90 = calPercentile(dataArray.map(d => d.x), 0.9);\r\n                    //     wellHistogramList.push(bins);\r\n                    // }\r\n                    // catch(e) {\r\n                    //     console.error(e);\r\n                    // }\r\n                }\r\n                if (self.getStackMode() === 'well') {\r\n\t\t\t\t\tlet stats = setStats(wellDataArray.map(d => d.x));\r\n\t\t\t\t\tstats.top = d3.min(zones, z => z.startDepth);\r\n\t\t\t\t\tstats.bottom = d3.max(zones, z => z.endDepth);\r\n\t\t\t\t\tlistWellStats.push(stats);\r\n                    wellHistogramList.name = well.name;\r\n                    wellHistogramList.color = well.color;\r\n                    allHistogramList.push(wellHistogramList);\r\n                }\r\n                else allHistogramList.push(...wellHistogramList);\r\n            }\r\n            allHistogramList.name = 'All';\r\n            let max = 0;\r\n\t\t\tlet flatten = [];\r\n            switch(self.getStackMode()) {\r\n                case 'none':\r\n                    for (let bins of allHistogramList) {\r\n                        let maybeMax = d3.max(bins.map(b => b.length));\r\n                        max = (max > maybeMax) ? max : maybeMax;\r\n                    }\r\n\t\t\t\t\tflatten = allHistogramList;\r\n                    break;\r\n                case 'well':\r\n                {\r\n                    for (let groupOfBins of allHistogramList) {\r\n                        let aggregate = aggregateHistogramList(groupOfBins);\r\n                        let maybeMax = d3.max(aggregate);\r\n                        max = (max > maybeMax) ? max : maybeMax;\r\n\t\t\t\t\t\tflatten = flatten.concat(groupOfBins);\r\n                    }\r\n                }\r\n                break;\r\n                case 'all': \r\n                {\r\n                    let aggregate = aggregateHistogramList(allHistogramList);\r\n                    max = d3.max(aggregate);\r\n\t\t\t\t\tflatten = allHistogramList;\r\n\r\n\t\t\t\t\tlet stats = setStats(allDataArray.map(d => d.x));\r\n\t\t\t\t\tstats.top = d3.min(allZones, z => z.startDepth);\r\n\t\t\t\t\tstats.bottom = d3.max(allZones, z => z.endDepth);\r\n\t\t\t\t\tlistAllStats.push(stats);\r\n                }\r\n                break;\r\n                    \r\n            }\r\n            $timeout(() => {\r\n                self.minY = 0;\r\n                self.maxY = max;\r\n                self.histogramList = allHistogramList;\r\n\t\t\t\tflattenHistogramList = flatten;\r\n            });\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n        }\r\n        wiLoading.hide();\r\n        console.log('end');\r\n    }\r\n\tfunction setStats(dataArray) {\r\n\t\tlet stats = {};\r\n\t\ttry {\r\n\t\t\tstats.numPoints = dataArray.length;\r\n\t\t\tstats.avg = d3.mean(dataArray);\r\n\t\t\tstats.min = d3.min(dataArray);\r\n\t\t\tstats.max = d3.max(dataArray);\r\n\t\t\tstats.stddev = d3.deviation(dataArray);\r\n\t\t\tstats.avgdev = calAverageDeviation(dataArray);\r\n\t\t\tstats.var = d3.variance(dataArray);\r\n\t\t\tstats.median = d3.median(dataArray);\r\n\t\t\tstats.skew = dataArray.length >= 3 ? ss.sampleSkewness(dataArray) : undefined;\r\n\t\t\tstats.kurtosis = dataArray.length >= 4 ? ss.sampleKurtosis(dataArray) : undefined;\r\n\t\t\tstats.p10 = calPercentile(dataArray, 0.1);\r\n\t\t\tstats.p50 = calPercentile(dataArray, 0.5);\r\n\t\t\tstats.p90 = calPercentile(dataArray, 0.9);\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t\treturn stats;\r\n\t}\r\n\tfunction calAverageDeviation(data) {\r\n\t\tif (data.length < 1) return;\r\n        let mean = d3.mean(data);\r\n\r\n        return d3.mean(data, function (d) {\r\n            return Math.abs(d - mean)\r\n        }).toFixed(_DECIMAL_LEN);\r\n    }\r\n\tfunction calPercentile(data, p) {\r\n\t\tif (data.length < 1) return;\r\n        return d3.quantile(data.sort(function (a, b) {\r\n            return a - b;\r\n        }), p).toFixed(_DECIMAL_LEN);\r\n    }\r\n    function aggregateHistogramList(histogramList) {\r\n        let aggregate = [];\r\n        for (let bins of histogramList) {\r\n            for (let j = 0; j < bins.length; j++) {\r\n                aggregate[j] = ((aggregate[j] || 0) + bins[j].length);\r\n            }\r\n        }\r\n        return aggregate;\r\n    }\r\n    function genZonationAllZS(top, bottom, color = 'blue') {\r\n        return {\r\n            name: 'ZonationAll',\r\n            zones: [{\r\n                startDepth: top,\r\n                endDepth: bottom,\r\n                zone_template: {\r\n                    name: 'ZonationAll',\r\n                    background: color\r\n                }\r\n            }]\r\n        }\r\n    }\r\n    this.genBins = genBins;\r\n    function genBins(pointset) {\r\n        let divisions = self.getDivisions();\r\n        let loga = self.getLoga();\r\n        let histogramGen = getHistogramFn(divisions, loga);\r\n        return histogramGen(pointset.map(d => d.x));\r\n    }\r\n    var _histogramGen;\r\n    function getHistogramFn(divisions, loga) {\r\n        if (!_histogramGen) {\r\n            let left = self.getLeft();\r\n            let right = self.getRight();\r\n            let divisions = self.getDivisions();\r\n            let domain = d3.extent([left, right]);\r\n            let thresholds;\r\n            if (!loga) {\r\n                thresholds = d3.range(domain[0], domain[1], (domain[1] - domain[0])/divisions);\r\n            }\r\n            else {\r\n                let logMinVal = Math.log10(domain[0] || 0.01);\r\n                let logMaxVal = Math.log10(domain[1] || 0.01);\r\n                thresholds = d3.range(logMinVal, logMaxVal, (logMaxVal - logMinVal)/divisions).map(v => Math.pow(10, v)); \r\n            }\r\n            _histogramGen = d3.histogram().domain(domain).thresholds(thresholds);\r\n        }\r\n        return _histogramGen;\r\n    }\r\n    function filterData(curveData, zone) {\r\n        return curveData.filter(d => ((zone.startDepth - d.depth)*(zone.endDepth - d.depth) <= 0));\r\n    }\r\n    function getCorrectValue(val1, val2) {\r\n        return _.isFinite(val1) ? val1 : val2;\r\n\r\n    }\r\n    this.getLeft = () => {\r\n        if(self.config.flipHorizontal) {\r\n           return getCorrectValue(getCorrectValue(self.config.right, self.defaultConfig.right), 1) ;\r\n        }\r\n        return getCorrectValue(getCorrectValue(self.config.left, self.defaultConfig.left), 0) ;\r\n    }\r\n    this.getRight = () => {\r\n        if(self.config.flipHorizontal) {\r\n            return getCorrectValue(getCorrectValue(self.config.left, self.defaultConfig.left), 1) ;\r\n        }\r\n        return getCorrectValue(getCorrectValue(self.config.right, self.defaultConfig.right), 0) ;\r\n     } \r\n    this.getLoga = () => (self.config.loga || self.defaultConfig.loga || 0)\r\n    this.getDivisions = () => (self.config.divisions || self.defaultConfig.divisions || 10)\r\n    this.getColorMode = () => (self.config.colorMode || self.defaultConfig.colorMode || 'zone')\r\n    this.getColor = (zone, well) => {\r\n        let cMode = self.getColorMode();\r\n        return cMode === 'zone' ? zone.zone_template.background:(cMode === 'well'?well.color:'blue');\r\n    }\r\n    this.getDisplayMode = () => (self.config.displayMode || self.defaultConfig.displayMode || 'bar')\r\n    this.getStackMode = () => (self.config.stackMode || self.defaultConfig.stackMode || 'none')\r\n    this.getBinGap = () => (self.config.binGap || self.defaultConfig.binGap)\r\n    this.getBinX = (bin) => ((bin.x0 + bin.x1)/2)\r\n    this.getBinY = (bin) => (bin.length)\r\n\r\n    this.colorFn = function(bin, bins) {\r\n        if (self.getStackMode() === 'none');\r\n        return bins.color;\r\n    }\r\n\r\n\tthis.save = function() {\r\n\t\tconsole.log('save');\r\n\t\tif (!self.idHistogram) {\r\n\t\t\twiDialog.promptDialog({\r\n\t\t\t\ttitle: 'New Histogram',\r\n\t\t\t\tinputName: 'Histogram Name',\r\n\t\t\t\tinput: self.getConfigTitle(),\r\n\t\t\t}, function(name) {\r\n\t\t\t\tlet type = 'HISTOGRAM';\r\n\t\t\t\tlet content = {\r\n\t\t\t\t\twellSpec: self.wellSpec,\r\n\t\t\t\t\tzonesetName: self.zonesetName,\r\n\t\t\t\t\tselectionType: self.selectionType,\r\n\t\t\t\t\tselectionValue: self.selectionValue,\r\n\t\t\t\t\tconfig: self.config\t\r\n\t\t\t\t}\r\n\t\t\t\twiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\r\n\t\t\t\t\tself.setConfigTitle(null, name);\r\n\t\t\t\t\tself.idHistogram = res.idParameterSet;\r\n\t\t\t\t\tconsole.log(res);\r\n                    self.onSave && self.onSave('multi-well-histogram' + res.idParameterSet);\r\n\t\t\t\t})\r\n\t\t\t\t\t.catch(e => {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\tself.save();\r\n\t\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet type = 'HISTOGRAM';\r\n\t\t\tlet content = {\r\n\t\t\t\tidParameterSet: self.idHistogram,\r\n\t\t\t\twellSpec: self.wellSpec,\r\n\t\t\t\tzonesetName: self.zonesetName,\r\n\t\t\t\tselectionType: self.selectionType,\r\n\t\t\t\tselectionValue: self.selectionValue,\r\n\t\t\t\tconfig: self.config\t\r\n\t\t\t}\r\n\t\t\twiApi.editAssetPromise(self.idHistogram, content).then(res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n    this.saveAs = function() {\r\n        console.log(\"saveAs\");\r\n        wiDialog.promptDialog({\r\n            title: 'New Histogram',\r\n            inputName: 'Histogram Name',\r\n            input: '',\r\n        }, function(name) {\r\n            let type = 'HISTOGRAM';\r\n            let content = {\r\n                wellSpec: self.wellSpec,\r\n                zonesetName: self.zonesetName,\r\n                selectionType: self.selectionType,\r\n                selectionValue: self.selectionValue,\r\n                config: self.config \r\n            }\r\n            wiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\r\n                self.setConfigTitle(null, name);\r\n                self.idHistogram = res.idParameterSet;\r\n                console.log(res);\r\n                self.onSave && self.onSave('multi-well-histogram' + res.idParameterSet);\r\n            })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                    self.saveAs();\r\n                })\r\n        });\r\n    }\r\n\r\n    let _zoneNames = []\r\n    self.getZoneNames = function() {\r\n        _zoneNames.length = 0;\r\n        Object.assign(_zoneNames, self.histogramList.map(bins => bins.name));\r\n        return _zoneNames;\r\n    }\r\n    self.getStatsRowIcons = function(rowIdx) {\r\n        return ['rectangle'];\r\n    }\r\n    self.getStatsIconStyle = function(rowIdx) {\r\n        return {\r\n            'background-color': self.histogramList[rowIdx].color\r\n        }\r\n    }\r\n    self.statsValue = function ([row, col]) {\r\n\t\tlet statsArray = [];\r\n\t\tswitch(self.getStackMode()) {\r\n\t\t\tcase 'none':\r\n\t\t\t\tstatsArray = flattenHistogramList.map(e => e.stats);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'well':\r\n\t\t\t\tstatsArray = [...listWellStats];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'all':\r\n\t\t\t\t// statsArray = [...listAllStats];\r\n\t\t\t\tstatsArray = flattenHistogramList.map(e => e.stats);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tstatsArray = [];\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tswitch(_headers[col]){\r\n\t\t\t\tcase 'top': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].top, 4) || 'N/A';\r\n\t\t\t\tcase 'bottom': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].bottom, 4) || 'N/A';\r\n\t\t\t\tcase '#pts':\r\n\t\t\t\t\treturn statsArray[row].numPoints || 'N/A';\r\n\t\t\t\tcase 'avg':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].avg) || 'N/A'\r\n\t\t\t\tcase 'min':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].min) || 'N/A'\r\n\t\t\t\tcase 'max':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].max )|| 'N/A'\r\n\t\t\t\tcase 'avgdev': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].avgdev) || 'N/A';\r\n\t\t\t\tcase 'stddev': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].stddev) || 'N/A';\r\n\t\t\t\tcase 'var':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].var) || 'N/A';\r\n\t\t\t\tcase 'skew':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].skew) || 'N/A';\r\n\t\t\t\tcase 'kurtosis':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].kurtosis) || 'N/A';\r\n\t\t\t\tcase 'median':\r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].median) || 'N/A';\r\n\t\t\t\tcase 'p10': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].p10) || 'N/A';\r\n\t\t\t\tcase 'p50': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].p50) || 'N/A';\r\n\t\t\t\tcase 'p90': \r\n\t\t\t\t\treturn wiApi.bestNumberFormat(statsArray[row].p90) || 'N/A';\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn \"this default\";\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\treturn 'N/A';\r\n\t\t}\r\n    }\r\n    let _headers = [];\r\n    self.getHeaders = function (){\r\n        _headers.length = 0;\r\n        Object.assign(_headers, self.statisticHeaders.filter((item, idx) => self.statisticHeaderMasks[idx]));\r\n        return _headers;\r\n    }\r\n    this.hideSelectedLayer = function() {\r\n        if(!self.selectedLayers) return;\r\n        self.selectedLayers.forEach(layer => layer._notUsed = true);\r\n    }\r\n    this.showSelectedLayer = function() {\r\n        if(!self.selectedLayers) return;\r\n        self.selectedLayers.forEach(layer => layer._notUsed = false);\r\n        $timeout(() => {});\r\n    }\r\n    this.hideAllLayer = function() {\r\n        self.histogramList.forEach(bins => bins._notUsed = true);\r\n        $timeout(() => {});\r\n    }\r\n    this.showAllLayer = function() {\r\n        self.histogramList.forEach(bins => bins._notUsed = false);\r\n        $timeout(() => {});\r\n    }\r\n\r\n    //--------------\r\n\r\n    this.hideSelectedZone = function() {\r\n        if(!self.selectedZones) return;\r\n        self.selectedZones.forEach(layer => layer._notUsed = true);\r\n    }\r\n    this.showSelectedZone = function() {\r\n        if(!self.selectedZones) return;\r\n        self.selectedZones.forEach(layer => layer._notUsed = false);\r\n        $timeout(() => {});\r\n    }\r\n    this.hideAllZone = function() {\r\n        self.zoneTree.forEach(bins => bins._notUsed = true);\r\n        $timeout(() => {});\r\n    }\r\n    this.showAllZone = function() {\r\n        self.zoneTree.forEach(bins => bins._notUsed = false);\r\n        $timeout(() => {});\r\n    }\r\n    this.onDrop = function (event, helper, myData) {\r\n        let idWells = helper.data('idWells');\r\n        if (idWells && idWells.length) {\r\n            $timeout(() => {\r\n                for (let idWell of idWells) {\r\n                    if (!self.wellSpec.find(wsp => wsp.idWell === idWell)) {\r\n                        self.wellSpec.push({idWell});\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    this.toggleWell = function(well) {\r\n        well._notUsed = !well._notUsed;\r\n    }\r\n    this.removeWell = function(well) {\r\n        let index = self.wellSpec.findIndex(wsp => wsp.idWell === well.idWell);\r\n        if(index >= 0) {\r\n            self.wellSpec.splice(index, 1);\r\n        }\r\n    }\r\n    \r\n}\r\n\n\n//# sourceURL=webpack:///./multi-well-histogram/index.js?");

/***/ }),

/***/ "./multi-well-histogram/style.less":
/*!*****************************************!*\
  !*** ./multi-well-histogram/style.less ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-histogram/style.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./multi-well-histogram/style.less?");

/***/ }),

/***/ "./multi-well-histogram/template.html":
/*!********************************************!*\
  !*** ./multi-well-histogram/template.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"main\\\">\\r\\n    <wi-droppable style=\\\"display:flex; width: 100%;;\\\" on-drop=\\\"self.onDrop\\\"\\r\\n        container-style=\\\"{display:'flex',flex: 1, position: 'relative'}\\\">\\r\\n        <div class=\\\"main-body\\\">\\r\\n            <div class=\\\"label-list-view ng-scope\\\"\\r\\n                style=\\\"display :flex; background: #f4f4f4; padding: 12px 15px; justify-content: flex-start;\\\">\\r\\n                <span ng-click=\\\"self.refresh()\\\" class=\\\"reload-16x16\\\"\\r\\n                    style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\r\\n                <span ng-click=\\\"self.save()\\\" class=\\\"save-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\r\\n                <span ng-click=\\\"self.saveAs()\\\" class=\\\"save-as-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\r\\n            </div>\\r\\n            <div style=\\\"flex: 1; display: flex; flex-direction: column;\\\">\\r\\n                <div class=\\\"main-body-center border-style\\\" style=\\\"position: relative;\\\">\\r\\n                    <layer-collection v-padding=\\\"50\\\" h-padding='60'>\\r\\n                        <axis-layer min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" loga=\\\"self.getLoga()\\\"\\r\\n                            n-ticks=\\\"self.config.majorTicks || 10\\\" minor-ticks=\\\"self.config.minorTicks || 1\\\" precision=\\\"4\\\"\\r\\n                            grid=\\\"!!self.config.grid\\\" placement=\\\"1\\\">\\r\\n                        </axis-layer>\\r\\n                        <axis-layer min-val='self.minY || 0' max-val='self.maxY || 100' n-ticks=\\\"10\\\" minor-ticks=\\\"1\\\"\\r\\n                            precision=\\\"4\\\" grid=\\\"!!self.config.grid\\\" axis-direction=\\\"'up'\\\" placement=\\\"0\\\"></axis-layer>\\r\\n                        <axis-layer min-val=\\\"0\\\" max-val=\\\"100\\\" n-ticks=\\\"10\\\" minor-ticks=\\\"1\\\" precision=\\\"4\\\"\\r\\n                            grid=\\\"!!self.config.grid\\\" axis-direction=\\\"'up'\\\" placement=\\\"1\\\"></axis-layer>\\r\\n                        <canvas-barchart-layer ng-show=\\\"!bins._notUsed\\\"\\r\\n                            ng-if=\\\"self.getDisplayMode() == 'bar' && self.getStackMode() == 'none'\\\"\\r\\n                            ng-repeat=\\\"bins in self.histogramList\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\r\\n                            min-y='self.minY || 0' max-y='self.maxY || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\r\\n                            bins=\\\"bins\\\" bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\">\\r\\n                        </canvas-barchart-layer>\\r\\n                        <canvas-barchart-layer ng-show=\\\"!groupOfBins._notUsed\\\" ng-if=\\\"self.getDisplayMode() == 'bar' && \\r\\n                            self.getStackMode() == 'well'\\\" ng-repeat=\\\"groupOfBins in self.histogramList\\\"\\r\\n                            min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" min-y='self.minY || 0'\\r\\n                            max-y='self.maxY || 100' loga=\\\"self.getLoga()\\\" autofit='false' bins=\\\"groupOfBins\\\"\\r\\n                            bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\" multiple='true'>\\r\\n                        </canvas-barchart-layer>\\r\\n                        <canvas-barchart-layer ng-show=\\\"!self.histogramList._notUsed\\\" ng-if=\\\"self.getDisplayMode() == 'bar' && \\r\\n                            self.getStackMode() == 'all'\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\r\\n                            min-y='self.minY || 0' max-y='self.maxY || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\r\\n                            bins=\\\"self.histogramList\\\" bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\" multiple='true'>\\r\\n                        </canvas-barchart-layer>\\r\\n                        <line-point-layer ng-if=\\\"self.getDisplayMode() === 'line' && !bins._notUsed\\\"\\r\\n                            ng-repeat=\\\"bins in self.histogramList\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\r\\n                            min-y='self.minY || 0' max-y='self.maxY || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\r\\n                            get-x='self.getBinX' get-y='self.getBinY' line-data=\\\"bins\\\" line-color=\\\"bins.color\\\"\\r\\n                            line-width='2' line-dash=\\\"'2 0'\\\" color-func=\\\"self.colorFn\\\">\\r\\n                        </line-point-layer>\\r\\n                    </layer-collection>\\r\\n                    <p style=\\\"position: absolute;left: 50%; transform: translateX(-50%); bottom: 0\\\">\\r\\n                        {{self.getConfigXLabel()}} </p>\\r\\n                    <p\\r\\n                        style=\\\"position: absolute; top: 23px; right: 45%;text-transform: uppercase; font-weight: bold; transform: translateY(-50%);\\\">\\r\\n                        {{self.getConfigTitle()}}</p>\\r\\n                    <p style=\\\"position: absolute;top: 23px;left: 15px; transform: translateY(-50%);\\\">Frequency</p>\\r\\n                    <p style=\\\"position: absolute;top: 23px; right: 15px;transform: translateY(-50%);\\\">Percentage (%)</p>\\r\\n                </div>\\r\\n                <div class=\\\"statistic-table\\\" resizable r-directions=\\\"['top']\\\" r-flex=\\\"true\\\">\\r\\n                    <div style=\\\"overflow: auto; position: absolute;overflow: auto; position: absolute; top: 0; right: 0; left: 0; bottom: 0;\\\" >\\r\\n                        <wi-table-view ng-if=\\\"self.histogramList.length\\\" row-count=\\\"self.getZoneNames().length\\\"\\r\\n                            col-count=\\\"self.getHeaders().length\\\" col-headers=\\\"self.getHeaders()\\\"\\r\\n                            get-row-icons=\\\"self.getStatsRowIcons\\\" get-row-icon-style=\\\"self.getStatsIconStyle\\\"\\r\\n                            row-headers=\\\"self.getZoneNames()\\\" accessor=\\\"self.statsValue\\\">\\r\\n                        </wi-table-view>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div style=\\\" height: 100%; right: 0; border-left: 1px solid #eee; box-shadow: 0 0 20px #0000001c;\\\">\\r\\n            <side-bar my-default-width=\\\"350\\\" orientation=\\\"w\\\" collapsed=\\\"false\\\">\\r\\n                <div class=\\\"label-list-view\\\" style=\\\"border-bottom: 2px solid #f0f0f0;\\r\\n                    display :flex;\\r\\n                    justify-content: space-between;\\r\\n                    padding: 0px 15px;\\\">\\r\\n                    <span ng-class=\\\"{'active' : isSet(1)}\\\" ng-click=\\\"setTab(1)\\\" class=\\\"tab-with-label\\\">Wells</span>\\r\\n                    <span ng-class=\\\"{'active' : isSet(2)}\\\" ng-click=\\\"setTab(2)\\\" class=\\\"tab-with-label\\\">Zone</span>\\r\\n                    <span ng-class=\\\"{'active' : isSet(3)}\\\" ng-click=\\\"setTab(3)\\\" class=\\\"tab-with-label\\\">Config</span>\\r\\n                    <span ng-class=\\\"{'active' : isSet(4)}\\\" ng-click=\\\"setTab(4)\\\" class=\\\"tab-with-label\\\">Stats</span>\\r\\n                    <span ng-class=\\\"{'active' : isSet(5)}\\\" ng-click=\\\"setTab(5)\\\" class=\\\"tab-with-label\\\">Layers</span>\\r\\n                </div>\\r\\n                <div style=\\\"display: flex; flex-direction: column; width: 100%; height: 100%;\\\">\\r\\n                    <div ng-show=\\\"isSet(1)\\\" style=\\\"overflow: auto;flex: 1;display:flex;flex-direction:column;\\\">\\r\\n                        <div class=\\\"label-option-sidebar\\\"\\r\\n                            style=\\\"margin-top: 10px; display: flex; justify-content: space-between;\\\">\\r\\n                            <span>INPUT</span>\\r\\n                            <div>\\r\\n                                <span ng-class=\\\"{'active' : self.selectionType === 'family-group'}\\\"\\r\\n                                    ng-click=\\\"self.selectionType='family-group'\\\" class=\\\"button-with-label\\\"\\r\\n                                    style=\\\"margin-right: 8px;\\\">family-group</span>\\r\\n                                <span ng-class=\\\"{'active' : self.selectionType === 'family'}\\\"\\r\\n                                    ng-click=\\\"self.selectionType='family'\\\" class=\\\"button-with-label\\\"\\r\\n                                    style=\\\"margin-right: 8px;\\\">family</span>\\r\\n                                <span ng-class=\\\"{'active' : self.selectionType === 'curve'}\\\"\\r\\n                                    ng-click=\\\"self.selectionType='curve'\\\" class=\\\"button-with-label\\\">curve</span>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"label-option-sidebar\\\" style=\\\"display: flex;\\\">\\r\\n                            <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\r\\n                                <span>X-Axis</span>\\r\\n                                <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.selectionList'\\r\\n                                    current-select=\\\"self.selectionValue\\\" on-item-changed=\\\"self.onInputSelectionChanged\\\">\\r\\n                                </wi-dropdown-list>\\r\\n                            </div>\\r\\n                            <div class=\\\"selection-sidebar\\\" style=\\\"margin-left: 15px; cursor: pointer;\\\" ng-click=\\\"self.discriminator()\\\">\\r\\n                                <span>Discriminator</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"overflow: auto; display:flex; flex-direction: column;\\\">\\r\\n                            <div style=\\\"border: 1px solid #e4e4e4;margin: 5px 16px;border-radius: 2px;\\\"\\r\\n                                ng-repeat='well in self.treeConfig'>\\r\\n                                <div\\r\\n                                    style=\\\"border-bottom: 1px solid #e4e4e4;display: flex; flex-direction: row;padding: 8px 15px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\r\\n\\r\\n                                    <div style=\\\"display: flex; align-items: center;\\\">\\r\\n\\r\\n                                        <i class=\\\"header-icon\\\"\\r\\n                                            ng-class=\\\"{'fa fa-caret-down': !well._hidden, 'fa fa-caret-right': well._hidden}\\\"\\r\\n                                            ng-click=\\\"well._hidden = !well._hidden\\\"></i>\\r\\n                                        <div ng-bind=\\\"well.name\\\"> </div>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                    <div style=\\\"display: flex; align-items: center;\\\">\\r\\n                                        <div style=\\\"border-radius: 2px;padding: 1px 10px;  margin-right: 10px;\\\"\\r\\n                                            ng-bind=\\\"self.getWellSpec(well).datasetName\\\"></div>\\r\\n                                        <div style=\\\"border-radius: 2px;padding: 1px 10px;\\\"\\r\\n                                            ng-bind=\\\"self.getCurve(well).name\\\"></div>\\r\\n                                        <span\\r\\n                                            ng-class=\\\"{'red-color fa fa-eye-slash': well._notUsed, 'blue-color fa fa-eye': !well._notUsed }\\\"\\r\\n                                            ng-click=\\\"self.toggleWell(well)\\\"\\r\\n                                            style=\\\"cursor: pointer; margin-right: 10px;\\\">\\r\\n                                        </span>\\r\\n                                        <span class=\\\"fa fa-times-circle\\\" ng-click=\\\"self.removeWell(well)\\\"\\r\\n                                            style=\\\"color: rgb(163, 163, 163);cursor: pointer;\\\">\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <wi-tree-view ng-hide=\\\"well._hidden\\\" tree-root=\\\"well\\\" get-label=\\\"self.getLabel\\\"\\r\\n                                    filter=\\\"self.selectionValue\\\" get-icon=\\\"self.getIcon\\\" get-children=\\\"self.getChildren\\\"\\r\\n                                    keep-children='true' uncollapsible='true' run-match=\\\"self.runMatch\\\"\\r\\n                                    hide-unmatched=\\\"true\\\" hide-search='true' click-fn='self.clickFunction'>\\r\\n                                </wi-tree-view>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"isSet(2)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\r\\n                        <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 16px 16px;\\\">\\r\\n                            <div class=\\\"selection-sidebar\\\">\\r\\n                                <span>Zoneset</span>\\r\\n                                <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.zonesetList'\\r\\n                                    current-select=\\\"self.zonesetName\\\" on-item-changed=\\\"self.onZonesetSelectionChanged\\\">\\r\\n                                </wi-dropdown-list>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"display: flex; padding: 0 16px 11px 16px;\\\">\\r\\n                            <span ng-click=\\\"self.hideSelectedZone()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 0;\\\">Hide</span>\\r\\n                            <span ng-click=\\\"self.showSelectedZone()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Show</span>\\r\\n                            <span ng-click=\\\"self.hideAllZone()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Hide All</span>\\r\\n                            <span ng-click=\\\"self.showAllZone()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Show All</span>\\r\\n                        </div>\\r\\n                        <div ng-show=\\\"self.zoneTree\\\"\\r\\n                            style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px;flex: 1;overflow: auto; \\\">\\r\\n                            <wi-tree-view tree-root=\\\"self.zoneTree\\\" get-label=\\\"self.getZoneLabel\\\"\\r\\n                                filter=\\\"self.zoneFilter\\\" get-icon=\\\"self.getZoneIcon\\\" get-children=\\\"self.noChildren\\\"\\r\\n                                keep-children='true' run-match=\\\"self.runZoneMatch\\\" hide-unmatched=\\\"true\\\"\\r\\n                                hide-search='false' click-fn='self.click2ToggleZone'>\\r\\n                            </wi-tree-view>\\r\\n                        </div>\\r\\n                        <div ng-hide=\\\"self.zoneTree\\\" style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px;\\\">\\r\\n                            zonationAll\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"isSet(3)\\\" style=\\\"\\r\\n                overflow: hidden;\\r\\n                flex: 1;\\r\\n                display: flex;\\r\\n                flex-direction: column;\\\">\\r\\n                        <div class=\\\"label-option-sidebar\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                            <span>OPTIONS</span>\\r\\n                        </div>\\r\\n                        <div style=\\\"overflow: auto;\\\">\\r\\n                            <div class=\\\"label-option-sidebar\\\">\\r\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                        item-label=\\\"'Left'\\\" item-value=\\\"self.getConfigLeft\\\"\\r\\n                                        set-value=\\\"self.setConfigLeft\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                    </editable>\\r\\n                                </div>\\r\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                        item-label=\\\"'Right'\\\" item-value=\\\"self.getConfigRight\\\"\\r\\n                                        set-value=\\\"self.setConfigRight\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                    </editable>\\r\\n                                </div>\\r\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n\\r\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                        item-label=\\\"'Divisions'\\\" item-value=\\\"self.getConfigDivisions\\\"\\r\\n                                        set-value=\\\"self.setConfigDivisions\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                    </editable>\\r\\n                                </div>\\r\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n\\r\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                        item-label=\\\"'Title'\\\" item-value=\\\"self.getConfigTitle\\\"\\r\\n                                        set-value=\\\"self.setConfigTitle\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                    </editable>\\r\\n\\r\\n                                </div>\\r\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n\\r\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                        item-label=\\\"'X Label'\\\" item-value=\\\"self.getConfigXLabel\\\"\\r\\n                                        set-value=\\\"self.setConfigXLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                    </editable>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;   flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Scale and Grid\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.loga}\\\"\\r\\n                                        ng-click=\\\"self.config.loga = !self.config.loga\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\">Log Scale</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.grid}\\\"\\r\\n                                        ng-click=\\\"self.config.grid = !self.config.grid\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\">Show Grid</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.flipHorizontal}\\\"\\r\\n                                        ng-click=\\\"self.config.flipHorizontal = !self.config.flipHorizontal\\\"\\r\\n                                        class=\\\"button-with-label\\\">Flip-H</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between; flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Display Mode\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.displayMode === 'bar'}\\\"\\r\\n                                        ng-click=\\\"self.config.displayMode='bar'\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\"> Bar Mode</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.displayMode === 'line'}\\\"\\r\\n                                        ng-click=\\\"self.config.displayMode='line'\\\" class=\\\"button-with-label\\\">Line\\r\\n                                        Mode</span>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between; flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Assistive Lines\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.showCumulative}\\\"\\r\\n                                        ng-click=\\\"self.config.showCumulative = !self.config.showCumulative\\\"\\r\\n                                        class=\\\"button-with-label\\\" style=\\\"margin-right: 8px;\\\"> Show Cumulative</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.showGaussian}\\\"\\r\\n                                        ng-click=\\\"self.config.showGaussian = !self.config.showGaussian\\\"\\r\\n                                        class=\\\"button-with-label\\\" style=\\\"margin-right: 8px;\\\"> Show Gaussian</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Color Mode\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'zone'}\\\"\\r\\n                                        ng-click=\\\"self.config.colorMode='zone'\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\"> Zone Color</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'well'}\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='well'\\\"\\r\\n                                        class=\\\"button-with-label\\\">Well Color</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'user'}\\\"\\r\\n                                        ng-click=\\\"self.config.colorMode='user'\\\" class=\\\"button-with-label\\\">User\\r\\n                                        Defined</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between; flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Stack Mode\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.stackMode === 'none'}\\\"\\r\\n                                        ng-click=\\\"self.config.stackMode='none'\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\">No Stack</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.stackMode === 'well'}\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.stackMode='well'\\\"\\r\\n                                        class=\\\"button-with-label\\\">Well</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.stackMode === 'all'}\\\"\\r\\n                                        ng-click=\\\"self.config.stackMode='all'\\\" class=\\\"button-with-label\\\">All</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Histogram Mode\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <span ng-class=\\\"{'active' : self.selectConfig === 'option1'}\\\"\\r\\n                                        ng-click=\\\"self.selectConfig='option1'\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\"> Frequency count</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.selectConfig === 'option2'}\\\"\\r\\n                                        ng-click=\\\"self.selectConfig='option2'\\\"\\r\\n                                        class=\\\"button-with-label\\\">Percentile</span>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"label-option-sidebar\\\"\\r\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\r\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Depth Limitation Mode\\r\\n                                    <div\\r\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <div ng-show=\\\"self.config.limitType === 'interval'\\\">\\r\\n                                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                                item-label=\\\"'Top'\\\" item-value=\\\"self.getConfigLimitTop\\\"\\r\\n                                                set-value=\\\"self.setConfigLimitTop\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                            </editable>\\r\\n                                        </div>\\r\\n                                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n                                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\r\\n                                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\r\\n                                                item-label=\\\"'Bottom'\\\" item-value=\\\"self.getConfigLimitBottom\\\"\\r\\n                                                set-value=\\\"self.setConfigLimitBottom\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\r\\n                                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\r\\n                                            </editable>\\r\\n                                        </div>\\r\\n                                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n                                    </div>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.limitType === 'interval'}\\\"\\r\\n                                        ng-click=\\\"self. config.limitType = 'interval'\\\" class=\\\"button-with-label\\\"\\r\\n                                        style=\\\"margin-right: 8px;\\\"> Interval Depth</span>\\r\\n                                    <span ng-class=\\\"{'active' : self.config.limitType === 'zonal'}\\\"\\r\\n                                        ng-click=\\\"self.config.limitType = 'zonal'\\\" class=\\\"button-with-label\\\">Zonal\\r\\n                                        Depth</span>\\r\\n                                    <div style=\\\"margin-bottom: 15px; \\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"isSet(4)\\\" onmouseover=\\\"this.style.overflow='overlay'\\\"\\r\\n                        onmouseout=\\\"this.style.overflow='hidden'\\\" style=\\\"flex:1; padding: 15px;\\\">\\r\\n                        <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Table Header\\r\\n                            <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"display: flex; flex-wrap: wrap;\\\">\\r\\n                            <span ng-repeat=\\\"header in self.statisticHeaders track by $index\\\"\\r\\n                                class=\\\"select-table-header\\\" ng-class=\\\"{'active' : self.statisticHeaderMasks[$index]}\\\"\\r\\n                                ng-click=\\\"self.statisticHeaderMasks[$index]= !self.statisticHeaderMasks[$index]\\\">\\r\\n                                {{header}}</span>\\r\\n                        </div>\\r\\n                        <!-- \\r\\n                <div style=\\\"overflow: auto;\\\">\\r\\n                    <wi-table-view ng-if=\\\"self.histogramList.length\\\" row-count=\\\"self.getZoneNames().length\\\"\\r\\n                        col-count=\\\"self.getHeaders().length\\\" col-headers=\\\"self.getHeaders()\\\"\\r\\n                        row-headers=\\\"self.getZoneNames()\\\" accessor=\\\"self.statsValue\\\">\\r\\n                    </wi-table-view>\\r\\n                </div> -->\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"isSet(5)\\\" style=\\\"overflow: auto; flex: 1; display: flex; flex-direction: column;\\\">\\r\\n                        <div style=\\\"display: flex; padding: 16px 16px 0px 16px;\\\">\\r\\n                            <span ng-click=\\\"self.hideSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 0px;\\\">Hide</span>\\r\\n                            <span ng-click=\\\"self.showSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Show</span>\\r\\n                            <span ng-click=\\\"self.hideAllLayer()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Hide All</span>\\r\\n                            <span ng-click=\\\"self.showAllLayer()\\\" class=\\\"button-with-label-layer\\\"\\r\\n                                style=\\\"margin-left: 15px;\\\">Show All</span>\\r\\n                        </div>\\r\\n                        <div ng-show=\\\"self.histogramList\\\"\\r\\n                            style=\\\"border: 1px solid #eee; margin: 15px 15px 5px 15px; overflow: hidden;\\\">\\r\\n                            <wi-tree-view tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\r\\n                                filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getLayerIcon\\\" get-icons=\\\"self.getLayerIcons\\\"\\r\\n                                get-children=\\\"self.noChildren\\\" icon-style=\\\"self.getLayerIconStyle\\\" keep-children='true'\\r\\n                                run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\r\\n                                click-fn='self.click2ToggleLayer'>\\r\\n                            </wi-tree-view>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"display: flex;\\\">\\r\\n                        <span class=\\\"button-update\\\" ng-click=\\\"self.genHistogramList()\\\">\\r\\n                            Update\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </side-bar>\\r\\n        </div>\\r\\n    </wi-droppable>\\r\\n</div>\";\n\n//# sourceURL=webpack:///./multi-well-histogram/template.html?");

/***/ })

/******/ });